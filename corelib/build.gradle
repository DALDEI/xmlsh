
plugins { id "ca.coglinc.javacc" version "2.1.0" }
apply from: "$rootDir/utils.gradle"

apply plugin: 'java-library-distribution'


ext.sourceDirs = ['src/shell'
    , 'src/commands'
    , 'src/core'
    , 'src/modules'
    , 'src/generated' ]

compileJavacc {
    inputDirectory = file('src/shell/org/xmlsh/sh/grammar')
    outputDirectory = file('src/generated/org/xmlsh/sh/grammar')
}


sourceSets {
    main {
        java {  srcDirs = sourceDirs  }
        resources {
            srcDirs = sourceDirs
            srcDir 'src/resources'
        }
    }
}



task createVersion  {
    ext.outputDir =  project.file("src/generated/org/xmlsh/sh/shell")
    ext.destFile = new File(outputDir, "version.properties")
    outputs.file destFile
    outputs.upToDateWhen {false }
    doLast {
        outputDir.exists() || outputDir.mkdir()
        def destFile = new File(outputDir, "version.properties")
        destFile.text = """version.build_date=${xversion_build_date}
version.release=${xversion_release}
version.version=${xversion_version}
"""
    }
}

build.dependsOn createVersion

// http://stackoverflow.com/questions/10405970/how-do-i-define-a-compile-time-only-classpath-in-gradle
configurations {
    exported
    all*.exclude group: 'asm'
    all*.exclude group: 'net.sf.saxon' , module: 'saxon'


   exported.extendsFrom  runtime
}

dependencies {

    compile "org.apache.ant:ant:1.9+"


    compile 'com.thaiopensource:trang:20091111' ,
            'com.thaiopensource:jing:20091111'


    compile 'org.apache.logging.log4j:log4j-api:2.+' ,
            'org.apache.logging.log4j:log4j-core:2.+'

    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.+',
            'com.fasterxml.jackson.core:jackson-core:2.5.+',
            'com.fasterxml.jackson.core:jackson-databind:2.5.+',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.5.+',
            'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.4+',
            'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.5.+'
    compile 'commons-codec:commons-codec:1+',
            'commons-io:commons-io:2.+',
            'org.apache.commons:commons-lang3:latest.release',
            'commons-logging:commons-logging:1.2+'
    compile  'org.apache.httpcomponents:httpclient:latest.release',
            'org.apache.httpcomponents:httpcore:latest.release'
    compile 'com.fasterxml.woodstox:woodstox-core:latest.release'
    compile 'org.slf4j:slf4j-api:latest.release',
            'org.xmlsh:stax-utils:1+'



    compile 'net.bytebuddy:byte-buddy:0.7.+'
    compile 'org.xmlsh:jline2:2.14-SNAPSHOT'
    compile 'com.jayway.jsonpath:json-path:2.+'
    compile 'org.ccil.cowan.tagsoup:tagsoup:1.+'
    compile  'xerces:xercesImpl:2.+'
    // do not use 2.0
    runtime 'xml-apis:xml-apis:1.4.+'
    compile 'xml-resolver:xml-resolver:1.2+'
    compile 'xom:xom:latest.release'
    compile ('net.sf.saxon:Saxon-HE:9.6.+' ){ force=true  }
    compile "org.projectlombok:lombok:+"

    compile  'saxon:saxon:6.5.+'
	compile 'net.sf.supercsv:super-csv:2.3+'

    compile  group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl' , version: '2.+'

    testCompile 'junit:junit:4.+'
    testRuntime project(":app")


}


jar {
    manifest {
        attributes 'Implementation-Title': 'XMLSH A command line shell for the new N(ot)O(nly) XML generation',
        'Implementation-Version': version_version
    }
    from sourceSets.main.output
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'xmlsh-core'
            version '2.0'
        }

    }
}

