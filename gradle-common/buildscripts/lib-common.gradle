apply plugin: 'java-library-distribution'

def getDate() {
  def date = new Date()
  def formattedDate = date.format("yyyy-MM-dd'T'HH:mm:ss")
  return formattedDate
}


project.ext.providedLibs = [ 
    'javax.servlet:javax.servlet-api:3.0+'
]


dependencies  {
  compile 'org.beanshell:bsh:2.0b4'
  compile 'org.bouncycastle:bcmail-jdk15on:1.50+'
  compile 'org.apache.httpcomponents:httpclient:4.2.3'
  compile 'xml-resolver:xml-resolver:1.2+'
  compile 'saxonica:saxon9-icu:6.0.7'
  compile 'saxonica:saxonPE9:6.0.7'
  compile 'certitax:CertiTaxJavaAPI:1.5b'
  compile 'paypal:payflow:4.31'
  compile "com.nexstra.ws:fedex-ws:+"
  compile 'enterprisedt.com:ftp:0.1'
  compile "com.nexstra.ws:ups-ws:+"
  compile 'servlets.com:cos:05Nov2002'
  compile 'javax.mail:mail:1.4.3' 
  compile 'org.apache.logging.log4j:log4j-api:2.6.+'
  compile 'org.apache.logging.log4j:log4j-core:2.6.+'
  compile 'org.apache.logging.log4j:log4j-1.2-api:2.6.+'
  compile 'xmlrpc:xmlrpc:2+'
  compile 'org.apache.xmlgraphics:fop:2+'
  compile 'org.apache.xmlgraphics:xmlgraphics-commons:2.0+'
  compile 'mysql:mysql-connector-java:5.1.33'
  compile("com.nexstra.ws:avservice:+") {
    exclude module: 'log4j'
  }
  compile 'commons-digester:commons-digester:2.1'
  compile 'com.amazonaws:aws-java-sdk-s3:1.10.+'
  compile providedLibs
  testCompile 'junit:junit:4.11'

}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j') {
            //prefer 'log4j-1.2-api' over 'log4j', with fixed version:
            details.useTarget "org.apache.logging.log4j:log4j-1.2-api:2.6."
        }
    }
}


jar {
  def versionFile = 'src/main/resources/META-INF/version.properties/'
  metaInf { 
    from('version.properties'){
      expand( [ buildDate : getDate() , buildVersion : project.version ]  )
   } 
  } 
}
// -- 'old' maven publishiung 
artifacts {
  archives jar
}

task sourceJar(type: Jar) { from sourceSets.main.allJava }
publishing {
  publications {
   mavenJava(MavenPublication) {
    from components.java
    artifact sourceJar { classifier "sources" }
   }
    ivyJava(IvyPublication) {
     from components.java
    }
   }
}


