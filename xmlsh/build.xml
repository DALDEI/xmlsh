<?xml version="1.0" ?>
<project name="xmlsh" default="main">

	<!-- Global properties 
     Edit these for every release
-->
	<property name="release" value="2_0_0"/>
	<property name="version" value="2.0.0"/>
	<property name="jar" value="xmlsh-2.0.jar"/>
	<property environment="env"/>
	<echo>Ant Version: ${ant.version}</echo>
	<echo>Ant lib: ${ant.core.lib}</echo>
	<echo>Java Version via Ant: ${ant.java.version}</echo>
	<echo>Java Version System Prop: ${java.version}</echo>


	<property name="dist" location="_dist"/>

	<target name="main" depends="build,test,dist" description="Main target">
		<echo>
            Building xmlsh
        </echo>
	</target>
	
	<target name="install.check">
			<condition property="install.exists">
				<available file="${env.XINSTALL}" type="dir" />
			</condition>
	</target>
	<property name="install" value="${env.XINSTALL}/xmlsh" />

	<target name="build" depends="clean, compile, jar"/>


	<tstamp>
		<format property="bdate.date" pattern="yyyy-MM-dd"/>
		<format property="bdate.datetime" pattern="yyyy-MM-dd'T'HH:mm:ss"/>
	</tstamp>

	<target name="clean" description="Clean all">
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="${dist}" includes="*"/>
			<fileset dir="_out" includes="**/*" />
			<fileset dir="test" includes="**/_out.txt"/>
			<fileset dir="src" includes="**/version.properties **/*.bak"/>
			<fileset dir="bin" includes="**/*" />
			<fileset dir="." includes="xmlsh.log" />
		</delete>
	</target>

	<target name="compile" description="Compilation target">
		<mkdir dir="_out"/>
		<echo file="src/shell/org/xmlsh/sh/shell/version.properties" append="false">
version.build_date=${bdate.datetime}
version.release=${release}
version.version=${version}
</echo>
		<javac  includeantruntime="false" destdir="_out" debug="on" source="1.7" target="1.7">
			<src path="src/core" />
			<src path="src/shell"/>
			<src path="src/commands"/>
			<src path="src/modules"/>
			<src path="src/generated" />
			<src path="src/resources" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar"/>
					<exclude name="**/saxon9ee.jar"/>
					<exclude name="**/saxon9pe.jar"/>

				</fileset>
				<fileset dir="build-lib">
					<include name="**/*.jar"/>
				</fileset>

			</classpath>
		</javac>
		<copy todir="_out" filtering="on">
			<fileset dir="src/shell">
				<include name="**/*.properties"/>
				<include name="**/*.xquery"/>
			</fileset>
			<fileset dir="src/commands">
				<include name="**/*.xsh"/>
				<include name="**/*.xsl"/>
				<include name="**/*.xml"/>
				<include name="**/*.xquery"/>
			</fileset>
			<fileset dir="src/modules">
				<include name="**/*.xsh"/>
				<include name="**/*.xsl"/>
				<include name="**/*.xml"/>
				<include name="**/*.xquery"/>
                        </fileset>
			<fileset dir="src/resources">
				<include name="log4j2.xml"/>
			</fileset>

		</copy>

	</target>
	

	
	

	<target name="jar" depends="compile" description="Build JAR - jar">
		<mkdir dir="bin"/>
		<jar 
        jarfile="bin/${jar}" 
        basedir="_out" 
        manifest="src/resources/WEB-INF/MANIFEST.MF"
        />

	</target>
	<target name="test" description="Test Cases">
		<!-- build xmlsh.jar first -->
		<subant target="main">
			<property name="xmlsh.root" value="${xmlsh.root}"/>
			<dirset dir="test">
				<include name="src"/>
			</dirset>
		</subant>
		
		<java 
  		classname="org.xmlsh.sh.shell.Shell"
  		fork="true"
  		dir="test">
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar"/>
					<exclude name="**/saxon9ee.jar"/>
					<exclude name="**/saxon9pe.jar"/>
				</fileset>
				<fileset dir="bin">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>

			<!--
  	    	<jvmarg value="-XX:MaxPermSize=128m"/>
		-->
			<arg value="./run_tests.xsh"/>
			<arg value="extra"/>
		</java>
	</target>
	<target name="dist" depends="jar" description="Create Distribution">

		<mkdir dir="${dist}"/>
		<zip destfile="${dist}/xmlsh_${release}.zip" >
			<zipfileset dir="." includes="bin/${jar} test/** win32/** lib/** samples/** unix/** cygwin/** notices/** license.txt README.txt" 
					excludes="**/sh_histo lib/saxon-license.lic lib/saxon9pe.jar lib/saxon9ee.jar" prefix="xmlsh_${release}"/>

		</zip>
		<zip destfile="${dist}/xmlsh_src_${release}.zip" >
			<zipfileset dir="." includes="*/**" 
				excludes=".settings/* **/sh_histo _out/** bin/** _dist/** lib/** build-lib/** test/** samples/** win32/** unix/** cygwin/**"  prefix="xmlsh_${release}"/>
		</zip>

		<!--
		<tar destfile="${dist}/xmlsh_${release}.tar.gz" compression="gzip">
  		  <zipfileset src="_dist/xmlsh_${release}.zip"/>
  		</tar>
		<tar destfile="${dist}/xmlsh_src_${release}.tar.gz" compression="gzip">
		  <zipfileset src="_dist/xmlsh_src_${release}.zip"/>
		</tar>
	-->

	</target>

	<mkdir dir="bin"/>

	<target name="combine" description="Create Distribution">
		<jar destfile="bin/xmlsh_all.jar" basedir="_out"
  		index="true"
  		filesetmanifest="merge">

			<zipgroupfileset dir="lib" includes="*.jar" />
		</jar>
	</target>

	<target name="javadoc">
		<ant antfile="javadoc.xml" target="javadoc" >

		</ant>
	</target>
	
	<target name="install" depends="install.check,dist" if="install.exists" description="Install to xmlsh">
	    <echo>Installing to ${install}</echo>
        <unzip dest="${install}" src="${dist}/xmlsh_${release}.zip">
        	<cutdirsmapper dirs="1"/>
        </unzip>
		
	</target>


</project>
