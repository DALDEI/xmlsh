#!/bin/sh
[ -d "$XMLSH" ] || { echo "xmlsh requires environment variable XMLSH set" 1>&2 ;  exit 1 ; }
# cygwin uses ";" separator because java is still a win app.
CP="$XMLSH/bin/*;$XMLSH/lib/*"
[ -z "$XMLSH_JVMOPTS" ] &&  XMLSH_JVMOPTS="-XX:+UseConcMarkSweepGC -Xmx1024m -Xms256m"
_JVMDEFS=-Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl
################################################################
# if running cygwin under cmd.exe then use do NOT use jline
#   Java does NOT detect a Console and may have TERM=cygwin
#   tty returns /dev/cons[x]
# if running cygwin under mintty then DO use jline
#     Java DOES detect a console and may have TERM=xterm
#      tty returns /dev/pty[x]
##################################################################

# Check if we have a tty 
TTY=$(tty)
if [ $? -ne 0 -o -z "$TTY" -o \
    ${TERM:-cygwin} = "cygwin" -o  ${TTY%%[0-9]} = "/dev/cons"  ] ; then 
    _JVMDEFS="$_JVMDEFS -Dxmlsh.jline=false"
elif [ ${TTY%%[0-9]} = "/dev/pty" ] ; then 
   stty -icanon min 1 -echo
   restore=$(stty -g)
   trap 'stty $restore' EXIT
   set $(stty size) "$@"
   export LINES=$1 COLS=$2
   shift 2
 _JVMDEFS="$_JVMDEFS -Dxmlsh.jline=true -Djline.terminal=mintty"
#  _JVMDEFS="$_JVMDEFS -Dxmlsh.jline=true -Djline.terminal=unix -Djline.tty=$TTY" 
fi

java $_JVMDEFS -cp "$CP" $XMLSH_JVMOPTS org.xmlsh.sh.shell.Shell   "$@"
